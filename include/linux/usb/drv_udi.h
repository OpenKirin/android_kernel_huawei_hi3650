/*************************************************************************
*   版权所有(C) 1987-2011, 深圳华为技术有限公司.
*
*   文 件 名 :  DrvInterface.h
*
*   作    者 :  yangzhi
*
*   描    述 :  本文件命名为"DrvInterface.h", 给出V7R1底软和协议栈之间的API接口统计
*
*   修改记录 :  2011年1月18日  v1.00  yangzhi创建
*************************************************************************/

#ifndef __DRV_UDI_H__
#define __DRV_UDI_H__

#define UDI_BUILD_DEV_ID(dev, type) (((dev) << 8) | ((type) & 0x00ff))

/* 主设备定义 */
typedef enum tagUDI_DEVICE_MAIN_ID {
	UDI_DEV_USB_ACM = 0,
	UDI_DEV_USB_NCM,
	UDI_DEV_ICC,
	UDI_DEV_UART,
	UDI_DEV_HSUART,
	UDI_DEV_MAX                 /* 必须在最后, 用于边界值 */
} UDI_DEVICE_MAIN_ID;

/* 各设备类型定义(要和 usb 多设备形态统一起来) */
/* ACM */
typedef enum tagUDI_ACM_DEV_TYPE {
	UDI_USB_ACM_CTRL,
	UDI_USB_ACM_AT,
	UDI_USB_ACM_SHELL,
	UDI_USB_ACM_LTE_DIAG,
	UDI_USB_ACM_OM,
	UDI_USB_ACM_MODEM,
	UDI_USB_ACM_GPS,	/*HISO*/
	UDI_USB_ACM_3G_GPS,	/*ashell*/
	UDI_USB_ACM_3G_PCVOICE,	/*预留*/
	UDI_USB_ACM_PCVOICE,	/*预留*/
	UDI_USB_ACM_SKYTONE,
	UDI_USB_HSIC_ACM0,
	UDI_USB_HSIC_ACM1,
	UDI_USB_HSIC_ACM2,
	UDI_USB_HSIC_ACM3,
	UDI_USB_HSIC_ACM4,
	UDI_USB_HSIC_ACM5,
	UDI_USB_HSIC_ACM6,
	UDI_USB_HSIC_ACM7,
	UDI_USB_HSIC_ACM8,
	UDI_USB_HSIC_ACM9,
	UDI_USB_HSIC_ACM10,
	UDI_USB_HSIC_ACM11,
	UDI_USB_HSIC_ACM12,
	UDI_USB_HSIC_ACM13,
	UDI_USB_HSIC_ACM14,
	UDI_USB_ACM_MAX		/* 必须在最后, 用于边界值 */
} UDI_ACM_DEV_TYPE;

/* NCM */
typedef enum tagUDI_NCM_DEV_TYPE {
	UDI_USB_NCM_NDIS,
	UDI_USB_NCM_CTRL,
	UDI_USB_HSIC_NCM0,
	UDI_USB_HSIC_NCM1,
	UDI_USB_HSIC_NCM2,
	UDI_USB_NCM_MAX		/* 必须在最后, 用于边界值 */
} UDI_NCM_DEV_TYPE;

/* ICC */
typedef enum tagUDI_ICC_DEV_TYPE {
	UDI_ICC_GUOM0 = 16,
	UDI_ICC_GUOM1,
	UDI_ICC_GUOM2,
	UDI_ICC_GUOM3,
	UDI_ICC_GUOM4,
	UDI_ICC_MAX		/* 必须在最后, 用于边界值 */
} UDI_ICC_DEV_TYPE;

/* 设备ID号定义 */
typedef enum tagUDI_DEVICE_ID {
	/* USB ACM */
	UDI_ACM_CTRL_ID		= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_ACM_CTRL),
	UDI_ACM_AT_ID		= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_ACM_AT),
	UDI_ACM_SHELL_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_ACM_SHELL),
	UDI_ACM_LTE_DIAG_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_ACM_LTE_DIAG),
	UDI_ACM_OM_ID		= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_ACM_OM),
	UDI_ACM_MODEM_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_ACM_MODEM),
	UDI_ACM_GPS_ID		= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_ACM_GPS),     /*HISO*/
	UDI_ACM_3G_GPS_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_ACM_3G_GPS),  /*ashell*/
	UDI_ACM_3G_PCVOICE_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_ACM_3G_PCVOICE), /*预留*/
	UDI_ACM_PCVOICE_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_ACM_PCVOICE),    /*预留*/
	UDI_ACM_SKYTONE_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_ACM_SKYTONE),
	UDI_ACM_HSIC_ACM0_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM0),
	UDI_ACM_HSIC_ACM1_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM1),
	UDI_ACM_HSIC_ACM2_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM2),
	UDI_ACM_HSIC_ACM3_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM3),
	UDI_ACM_HSIC_ACM4_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM4),
	UDI_ACM_HSIC_ACM5_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM5),
	UDI_ACM_HSIC_ACM6_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM6),
	UDI_ACM_HSIC_ACM7_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM7),
	UDI_ACM_HSIC_ACM8_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM8),
	UDI_ACM_HSIC_ACM9_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM9),
	UDI_ACM_HSIC_ACM10_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM10),
	UDI_ACM_HSIC_ACM11_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM11),
	UDI_ACM_HSIC_ACM12_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM12),
	UDI_ACM_HSIC_ACM13_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM13),
	UDI_ACM_HSIC_ACM14_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_ACM, UDI_USB_HSIC_ACM14),

	/* USB NCM */
	UDI_NCM_NDIS_ID		= UDI_BUILD_DEV_ID(UDI_DEV_USB_NCM, UDI_USB_NCM_NDIS),
	UDI_NCM_CTRL_ID		= UDI_BUILD_DEV_ID(UDI_DEV_USB_NCM, UDI_USB_NCM_CTRL),
	UDI_NCM_HSIC_NCM0_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_NCM, UDI_USB_HSIC_NCM0),
	UDI_NCM_HSIC_NCM1_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_NCM, UDI_USB_HSIC_NCM1),
	UDI_NCM_HSIC_NCM2_ID	= UDI_BUILD_DEV_ID(UDI_DEV_USB_NCM, UDI_USB_HSIC_NCM2),

	/* UART */
	UDI_UART_0_ID		= UDI_BUILD_DEV_ID(UDI_DEV_UART, 0),
	UDI_UART_1_ID		= UDI_BUILD_DEV_ID(UDI_DEV_UART, 1),

	/* HSUART */
	UDI_HSUART_0_ID		= UDI_BUILD_DEV_ID(UDI_DEV_HSUART, 0),
	UDI_HSUART_1_ID		= UDI_BUILD_DEV_ID(UDI_DEV_HSUART, 1),

	/* ICC */
	UDI_ICC_IFC_ID		= UDI_BUILD_DEV_ID(UDI_DEV_ICC, 0),
	UDI_ICC_IPM_ID		= UDI_BUILD_DEV_ID(UDI_DEV_ICC, 1),
	UDI_ICC_LMSP_ID		= UDI_BUILD_DEV_ID(UDI_DEV_ICC, 2),

	UDI_ICC_GUOM0_ID	= UDI_BUILD_DEV_ID(UDI_DEV_ICC, UDI_ICC_GUOM0),
	UDI_ICC_GUOM1_ID	= UDI_BUILD_DEV_ID(UDI_DEV_ICC, UDI_ICC_GUOM1),
	UDI_ICC_GUOM2_ID	= UDI_BUILD_DEV_ID(UDI_DEV_ICC, UDI_ICC_GUOM2),
	UDI_ICC_GUOM3_ID	= UDI_BUILD_DEV_ID(UDI_DEV_ICC, UDI_ICC_GUOM3),
	UDI_ICC_GUOM4_ID	= UDI_BUILD_DEV_ID(UDI_DEV_ICC, UDI_ICC_GUOM4),

	/* MUST BE LAST */
	UDI_INVAL_DEV_ID	= 0xFFFF
} UDI_DEVICE_ID;

/* 设备的打开参数 */
typedef struct tagUDI_OPEN_PARAM {
	UDI_DEVICE_ID	devid;		/* 设备ID */
	void		*pPrivate;	/* 模块特有的数据 */
} UDI_OPEN_PARAM;

/* IOCTL 命令码,需要的命令码在此添加 */
typedef enum tagUDI_IOCTL_CMD_TYPE {
	UDI_IOCTL_SET_WRITE_CB = 0xF001, /* 设置一个起始码值防止与系统定义冲突 */
	UDI_IOCTL_SET_READ_CB,
	UDI_IOCTL_INVAL_CMD = 0xFFFFFFFF
} UDI_IOCTL_CMD_TYPE;

#endif
